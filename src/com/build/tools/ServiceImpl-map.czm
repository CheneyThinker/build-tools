package com.%package%.service.impl;

import com.%package%.config.%project%YMLConfig;
import com.%package%.exception.%project%Exception;
import com.%package%.service.%project%Service;
import com.%package%.utils.%project%Utils;
import org.springframework.beans.factory.config.YamlMapFactoryBean;
import org.springframework.core.io.FileSystemResource;
import org.springframework.stereotype.Service;

import java.util.Map;

/**
 * @description
 * @author %author%
 * @date %date%
 */
@Service
public class %project%ServiceImpl implements %project%Service {

  public Object index(Object data) throws %project%Exception {
    Map<String, Object> map = %project%Utils.conversion(data);
    if (map.get("sign").equals(%project%Utils.md5("%project% By %author%"))) {
      %project%YMLConfig %small%YMLConfig = %project%Utils.get%project%YMLConfig();
      %project%YMLConfig.Cons cons = %small%YMLConfig.getCons().clone();
      map.put("projectName", cons.getProjectName());
      map.put("version", cons.getVersion());
      map.put("major", cons.getMajor());
      map.put("logPath", cons.getLogPath());
      map.put("cons", cons);
      map.put("inter", %small%YMLConfig.getInter());
      map.put("log", %project%Utils.readLog(map.remove("fileName")));
      map.put("logInfo", %project%Utils.getLogInfo());
      return map;
    } else {
      throw new %project%Exception("授权未通过!");
    }
  }
  
  public void refresh%project%(Object data) throws %project%Exception {
    Map<String, Object> map = %project%Utils.conversion(data);
    if (map.get("sign").equals(%project%Utils.md5("%project% By %author%"))) {
      if (map.containsKey("type")) {
        Object type = map.get("type");
        if (type.equals("yml")) {
          %project%Utils.monitor%project%(map);
        }
      }
    } else {
      throw new %project%Exception("授权未通过!");
    }
  }
  
  public void reload%project%(Object data) throws %project%Exception {
    Map<String, Object> map = %project%Utils.conversion(data);
    if (map.get("sign").equals(%project%Utils.md5("%project% By %author%"))) {
      FileSystemResource fileSystemResource = new FileSystemResource(map.get("yml").toString());
      YamlMapFactoryBean yamlMapFactoryBean = new YamlMapFactoryBean();
      yamlMapFactoryBean.setResources(fileSystemResource);
      map = (Map<String, Object>) yamlMapFactoryBean.getObject().get("%prefix%");
      %project%Utils.monitor%project%(map);
    } else {
      throw new %project%Exception("授权未通过!");
    }
  }
  
}